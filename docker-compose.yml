name: tft-stats
services:
  initializeplayers:
    build:
      context: ./initializePlayers
      dockerfile: ./Dockerfile
    env_file:
      - .env
    volumes:
      - ./initializePlayers:/initializePlayers
    depends_on:
      - queue

  ratelimiting:
    build:
      context: ./riotRateLimiting
      dockerfile: ./Dockerfile
    env_file:
      - .env
    volumes:
      - ./riotRateLimiting:/riotRateLimiting
    depends_on:
      - queue

  matchcrawler:
    build:
      context: ./matchCrawler
      dockerfile: ./Dockerfile
    env_file:
      - .env
    volumes:
      - ./matchCrawler:/matchcrawler
    depends_on:
      - migrations
      - queue
      - ratelimiting
  
  queryapi:
    build:
      context: ./statsQueryApi
      dockerfile: ./Dockerfile
    env_file:
      - statsQueryApi/.env
    ports:
      - "8000:8000"
    volumes:
      - ./statsQueryApi:/queryapi
    depends_on:
      - migrations
    

  migrations:
    build:
      context: ./migrations
      dockerfile: ./Dockerfile
    volumes:
      - ./migrations:/migrations
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres
    restart: always
    ports:
      - "5432"
    volumes:
      - postgres-db:/database
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  queue:
    image: redis
    restart: always
    ports:
      - "6379"
    volumes:
      - redis-queues:/queues


    

volumes:
  redis-queues:
  postgres-db: